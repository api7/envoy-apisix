static_resources:
  listeners:
  - name: main
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 8000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: auto
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: web_service
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.lua.v2.Lua
              inline_code: |
                local core = require("apisix.core")
                local ctx = {}

                function envoy_on_request(request_handle)
                  ctx.test = "a"
                  core.ctx.set_vars_meta(ctx, request_handle)

                  local ok, redirect = pcall(require, "apisix.plugins.redirect")
                  local phase_func = redirect.rewrite
                  local conf = {ret_code = 302, uri = "/redirect/fdsdf"}
                  phase_func(conf, ctx, request_handle)
                end

                function envoy_on_response(response_handle)
                  if ctx and ctx.var then
                    for key, value in pairs(ctx.var) do
                      response_handle:logWarn("ctx key:" .. key .. " value: " .. value)
                    end                 
                  end  
                end                
          - name: envoy.filters.http.router
            typed_config: {}

  clusters:
  - name: web_service
    connect_timeout: 0.25s
    type: strict_dns # static
    lb_policy: round_robin
    load_assignment:
      cluster_name: web_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: web_service
                port_value: 80
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
